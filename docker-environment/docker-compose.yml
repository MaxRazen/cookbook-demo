version: '3.5'

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge

volumes:
  mysql:
    driver: local
  kafka:
    driver: local
  zookeeper:
    driver: local

services:
  ### Workspace Utilities ##################################
  workspace:
    build:
      context: ./php-cli
      args:
        - TZ=${TIMEZONE}
        - PUID=${PHP_PUID}
        - PGID=${PHP_PGID}
        - INSTALL_NODE=${WORKSPACE_INSTALL_NODE}
        - NODE_VERSION=${WORKSPACE_NODE_VERSION}
        - INSTALL_SUPERVISOR=${WORKSPACE_INSTALL_SUPERVISOR}
        - INSTALL_RDKAFKA=${PHP_INSTALL_RDKAFKA}
        - http_proxy
        - https_proxy
        - no_proxy
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}
      - ./php-cli/supervisor/supervisord.d:/etc/supervisord.d
    tty: true
    networks:
      - backend

  ### PHP FPM ##############################################
  php-fpm:
    build:
      context: ./php-fpm
      args:
        - PUID=${PHP_PUID}
        - PGID=${PHP_PGID}
        - INSTALL_RDKAFKA=${PHP_INSTALL_RDKAFKA}
        - http_proxy
        - https_proxy
        - no_proxy
    volumes:
      - ./php-fpm/php8.ini:/usr/local/etc/php/php.ini
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}
    ports:
      - "9003:9003"
    expose:
      - "9000"
    networks:
      - backend

  ### NGINX Server #########################################
  nginx:
    build:
      context: ./nginx
      args:
        - PHP_UPSTREAM_CONTAINER=${NGINX_PHP_UPSTREAM_CONTAINER}
        - PHP_UPSTREAM_PORT=${NGINX_PHP_UPSTREAM_PORT}
        - http_proxy
        - https_proxy
        - no_proxy
    restart: unless-stopped
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}
      - ${NGINX_SITES_PATH}:/etc/nginx/sites-available
      - ${NGINX_SSL_PATH}:/etc/nginx/ssl
    ports:
      - "${NGINX_HOST_HTTP_PORT}:80"
      - "${NGINX_HOST_HTTPS_PORT}:443"
    depends_on:
      - php-fpm
    networks:
      - frontend
      - backend

  ### Apache Kafka ####################################################
  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_HOST_NAME: 127.0.0.1
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://127.0.0.1:9092
      KAFKA_MESSAGE_MAX_BYTES: 2000000
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - ${DATA_PATH_HOST}/kafka:/kafka
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper
    networks:
      - backend

  ### MySQL ################################################
  mysql:
    build:
      context: ./mysql
      args:
        - MYSQL_VERSION=${MYSQL_VERSION}
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    volumes:
      - ${DATA_PATH_HOST}/mysql:/var/lib/mysql
      - ${MYSQL_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d
    ports:
      - "${MYSQL_PORT}:3306"
    networks:
      - backend

  ### ZooKeeper #########################################
  zookeeper:
    build: ./zookeeper
    volumes:
      - ${DATA_PATH_HOST}/zookeeper/data:/data
      - ${DATA_PATH_HOST}/zookeeper/datalog:/datalog
    ports:
      - "${ZOOKEEPER_PORT}:2181"
    networks:
      - backend
